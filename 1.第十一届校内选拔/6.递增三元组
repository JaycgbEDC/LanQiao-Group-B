【问题描述】
在数列 a[1], a[2], ..., a[n] 中，如果对于下标 i, j, k 满足 0<i<j<k<n+1 且 a[i]<a[j]<a[k]，则称 a[i], a[j], a[k] 为一组递增三元组，a[j]为递增三元组的中心。
给定一个数列，请问数列中有多少个元素可能是递增三元组的中心。
【输入格式】
输入的第一行包含一个整数 n。
第二行包含 n 个整数 a[1], a[2], ..., a[n]，相邻的整数间用空格分隔，表示给定的数列。
【输出格式】
输出一行包含一个整数，表示答案。
【样例输入】
5
1 2 5 3 5
【样例输出】
2
【样例说明】
a[2] 和 a[4] 可能是三元组的中心。
【评测用例规模与约定】
对于 50% 的评测用例，2 <= n <= 100，0 <= 数列中的数 <= 1000。
对于所有评测用例，2 <= n <= 1000，0 <= 数列中的数 <= 10000。

解：
#include <iostream>
using namespace std;


int main() {
	int n, a[n], count = 0;
	cin >> n;
	for (int i = 0; i < n; ++i) {
		cin >> a[i];
	}
	for (int j = 1; j < n - 1; ++j) {//扫描中心 
		int flag = 0;//标志位，标记j是否已被记过数 
		for (int i = 0; i < j; ++i) {//扫描中心的左边 
			if (flag) break;//被标记过的话直接开始下一个数 
			for (int k = j + 1; k < n; ++k) {//扫描中心的右边 
				if (a[i] < a[j] && a[j] < a[k]) {//a[i] < a[j] < a[k] 不可以直接这样写在表达式里面（就因为这里搞了一会！） 
					count++;
					flag = 1;//已标记 
					break;
				}
			}
		}
	}
	cout << count << endl;
	return 0;
} 
